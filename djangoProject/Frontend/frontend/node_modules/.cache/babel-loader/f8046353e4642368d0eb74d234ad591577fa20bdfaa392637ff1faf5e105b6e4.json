{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hetdo\\\\PycharmProjects\\\\djangoProject\\\\Frontend\\\\frontend\\\\src\\\\Components\\\\Customer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CustomNavbar from \"./Header\";\nimport { Form, Label, Input, FormGroup, Button } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Customer() {\n  _s();\n  const [csvFile, setCsvFile] = useState(null); // To store the uploaded file\n  const [question, setQuestion] = useState(''); // To store user input question\n  const [output, setOutput] = useState(''); // To store the API response (SQL query and results)\n\n  // Handle CSV file upload\n  const handleFileUpload = async e => {\n    e.preventDefault();\n    if (!csvFile) {\n      alert('Please upload a CSV file!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('csv_file', csvFile);\n    try {\n      await axios.post('http://127.0.0.1:8000/project/upload-sales-csv/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('CSV uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      alert('Failed to upload CSV file.');\n    }\n  };\n\n  // Handle fetching the answer for the user's question\n  const handleGetAnswer = async e => {\n    e.preventDefault();\n    if (!question) {\n      alert('Please enter a question!');\n      return;\n    }\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/project/generate-single-query/', {\n        text: question\n      });\n\n      // Format the result for display\n      const result = response.data.results ? JSON.stringify(response.data.results, null, 2) : response.data.error || 'No results found';\n      setOutput(`SQL Query: ${response.data.sql_query}\\n\\nResults: ${result}`);\n    } catch (error) {\n      console.error('Error fetching answer:', error);\n      setOutput('Error retrieving answer.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        width: \"800px\",\n        marginTop: \"10px\",\n        marginLeft: \"450px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"csv_file\",\n          children: \"Upload Your Customer CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"csv_file\",\n          name: \"csv_file\",\n          type: \"file\",\n          onChange: e => setCsvFile(e.target.files[0]) // Set the uploaded file\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-success\",\n        type: \"submit\",\n        onClick: handleFileUpload,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Get Customer Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"text\",\n          children: \"Ask a question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"text\",\n          type: \"textarea\",\n          value: question,\n          onChange: e => setQuestion(e.target.value) // Set the user's question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        onClick: handleGetAnswer,\n        children: \"Get Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"output\",\n        type: \"textarea\",\n        value: output,\n        readOnly: true // Make the output textarea read-only\n        ,\n        style: {\n          height: '300px'\n        } // Increase height for better visibility\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Customer, \"+pDw9JbusJdtkaHj+q75FJHzs1c=\");\n_c = Customer;\nexport default Customer;\nvar _c;\n$RefreshReg$(_c, \"Customer\");","map":{"version":3,"names":["React","useEffect","useState","axios","CustomNavbar","Form","Label","Input","FormGroup","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Customer","_s","csvFile","setCsvFile","question","setQuestion","output","setOutput","handleFileUpload","e","preventDefault","alert","formData","FormData","append","post","headers","error","console","handleGetAnswer","response","text","result","data","results","JSON","stringify","sql_query","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","marginTop","marginLeft","for","id","name","type","onChange","target","files","className","onClick","value","readOnly","height","_c","$RefreshReg$"],"sources":["C:/Users/hetdo/PycharmProjects/djangoProject/Frontend/frontend/src/Components/Customer.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport CustomNavbar from \"./Header\";\r\nimport { Form, Label, Input, FormGroup, Button } from \"reactstrap\";\r\n\r\nfunction Customer() {\r\n  const [csvFile, setCsvFile] = useState(null);  // To store the uploaded file\r\n  const [question, setQuestion] = useState('');  // To store user input question\r\n  const [output, setOutput] = useState('');      // To store the API response (SQL query and results)\r\n\r\n  // Handle CSV file upload\r\n  const handleFileUpload = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!csvFile) {\r\n      alert('Please upload a CSV file!');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('csv_file', csvFile);\r\n\r\n    try {\r\n      await axios.post('http://127.0.0.1:8000/project/upload-sales-csv/', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      alert('CSV uploaded successfully!');\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      alert('Failed to upload CSV file.');\r\n    }\r\n  };\r\n\r\n  // Handle fetching the answer for the user's question\r\n  const handleGetAnswer = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!question) {\r\n      alert('Please enter a question!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:8000/project/generate-single-query/', { text: question });\r\n      \r\n      // Format the result for display\r\n      const result = response.data.results\r\n        ? JSON.stringify(response.data.results, null, 2)\r\n        : response.data.error || 'No results found';\r\n\r\n      setOutput(`SQL Query: ${response.data.sql_query}\\n\\nResults: ${result}`);\r\n    } catch (error) {\r\n      console.error('Error fetching answer:', error);\r\n      setOutput('Error retrieving answer.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CustomNavbar />\r\n      <Form style={{ width: \"800px\", marginTop: \"10px\", marginLeft: \"450px\" }}>\r\n        <br />\r\n        {/* CSV File Upload Section */}\r\n        <FormGroup>\r\n          <Label for=\"csv_file\">Upload Your Customer CSV</Label>\r\n          <Input \r\n            id=\"csv_file\" \r\n            name=\"csv_file\" \r\n            type=\"file\" \r\n            onChange={(e) => setCsvFile(e.target.files[0])}  // Set the uploaded file\r\n          />\r\n        </FormGroup>\r\n        <Button className=\"btn btn-success\" type=\"submit\" onClick={handleFileUpload}>Submit</Button>\r\n        <br /> <br />\r\n\r\n        {/* Question Input Section */}\r\n        <h1>Get Customer Info</h1> \r\n        <br /> \r\n        <FormGroup>\r\n          <Label for=\"text\">Ask a question</Label>\r\n          <Input \r\n            id=\"text\" \r\n            type=\"textarea\" \r\n            value={question} \r\n            onChange={(e) => setQuestion(e.target.value)}  // Set the user's question\r\n          />\r\n        </FormGroup>\r\n        <Button className=\"btn btn-primary\" type=\"submit\" onClick={handleGetAnswer}>Get Answer</Button>\r\n        <br /><br />\r\n\r\n        {/* Output Display Section */}\r\n        <h1>Output</h1> \r\n        <br />\r\n        <Input \r\n          id=\"output\" \r\n          type=\"textarea\" \r\n          value={output} \r\n          readOnly  // Make the output textarea read-only\r\n          style={{ height: '300px' }}  // Increase height for better visibility\r\n        /> \r\n\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Customer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,UAAU;AACnC,SAASC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,MAAM,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnE,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC/C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EAC/C,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAM;;EAE/C;EACA,MAAMoB,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACR,OAAO,EAAE;MACZS,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEZ,OAAO,CAAC;IAEpC,IAAI;MACF,MAAMb,KAAK,CAAC0B,IAAI,CAAC,iDAAiD,EAAEH,QAAQ,EAAE;QAC5EI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFL,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CN,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;;EAED;EACA,MAAMQ,eAAe,GAAG,MAAOV,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACN,QAAQ,EAAE;MACbO,KAAK,CAAC,0BAA0B,CAAC;MACjC;IACF;IAEA,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAM/B,KAAK,CAAC0B,IAAI,CAAC,sDAAsD,EAAE;QAAEM,IAAI,EAAEjB;MAAS,CAAC,CAAC;;MAE7G;MACA,MAAMkB,MAAM,GAAGF,QAAQ,CAACG,IAAI,CAACC,OAAO,GAChCC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,GAC9CJ,QAAQ,CAACG,IAAI,CAACN,KAAK,IAAI,kBAAkB;MAE7CV,SAAS,CAAC,cAAca,QAAQ,CAACG,IAAI,CAACI,SAAS,gBAAgBL,MAAM,EAAE,CAAC;IAC1E,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CV,SAAS,CAAC,0BAA0B,CAAC;IACvC;EACF,CAAC;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAA6B,QAAA,gBACE/B,OAAA,CAACP,YAAY;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBnC,OAAA,CAACN,IAAI;MAAC0C,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,SAAS,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAQ,CAAE;MAAAR,QAAA,gBACtE/B,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAENnC,OAAA,CAACH,SAAS;QAAAkC,QAAA,gBACR/B,OAAA,CAACL,KAAK;UAAC6C,GAAG,EAAC,UAAU;UAAAT,QAAA,EAAC;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtDnC,OAAA,CAACJ,KAAK;UACJ6C,EAAE,EAAC,UAAU;UACbC,IAAI,EAAC,UAAU;UACfC,IAAI,EAAC,MAAM;UACXC,QAAQ,EAAGhC,CAAC,IAAKN,UAAU,CAACM,CAAC,CAACiC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAE;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eACZnC,OAAA,CAACF,MAAM;QAACiD,SAAS,EAAC,iBAAiB;QAACJ,IAAI,EAAC,QAAQ;QAACK,OAAO,EAAErC,gBAAiB;QAAAoB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5FnC,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,KAAC,eAAAnC,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAGbnC,OAAA;QAAA+B,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BnC,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNnC,OAAA,CAACH,SAAS;QAAAkC,QAAA,gBACR/B,OAAA,CAACL,KAAK;UAAC6C,GAAG,EAAC,MAAM;UAAAT,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxCnC,OAAA,CAACJ,KAAK;UACJ6C,EAAE,EAAC,MAAM;UACTE,IAAI,EAAC,UAAU;UACfM,KAAK,EAAE1C,QAAS;UAChBqC,QAAQ,EAAGhC,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACiC,MAAM,CAACI,KAAK,CAAE,CAAE;QAAA;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eACZnC,OAAA,CAACF,MAAM;QAACiD,SAAS,EAAC,iBAAiB;QAACJ,IAAI,EAAC,QAAQ;QAACK,OAAO,EAAE1B,eAAgB;QAAAS,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/FnC,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAAnC,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAGZnC,OAAA;QAAA+B,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfnC,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNnC,OAAA,CAACJ,KAAK;QACJ6C,EAAE,EAAC,QAAQ;QACXE,IAAI,EAAC,UAAU;QACfM,KAAK,EAAExC,MAAO;QACdyC,QAAQ,OAAE;QAAA;QACVd,KAAK,EAAE;UAAEe,MAAM,EAAE;QAAQ,CAAE,CAAE;MAAA;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE,CAAC;EAAA,eACP,CAAC;AAEP;AAAC/B,EAAA,CArGQD,QAAQ;AAAAiD,EAAA,GAARjD,QAAQ;AAuGjB,eAAeA,QAAQ;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}