{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hetdo\\\\PycharmProjects\\\\djangoProject\\\\Frontend\\\\frontend\\\\src\\\\Components\\\\Sales.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sales() {\n  var _s = $RefreshSig$();\n  // Create a reusable function to get sales data\n  const fetchSalesData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/project/sales/');\n      return response.data; // Return the response data\n    } catch (error) {\n      throw error; // Propagate error to handle it in the component\n    }\n  };\n  const SalesData = () => {\n    _s();\n    const [salesData, setSalesData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // Fetch data when component mounts\n    useEffect(() => {\n      const getSalesData = async () => {\n        try {\n          const data = await fetchSalesData(); // Call the sales function\n          setSalesData(data); // Set the state with the fetched data\n          setLoading(false); // Stop the loading state\n        } catch (err) {\n          setError(err.message); // Capture any error\n          setLoading(false); // Stop the loading state\n        }\n      };\n      getSalesData(); // Trigger data fetch\n    }, []); // Empty dependency array means this runs once after the component mounts\n\n    // Render loading state or error if applicable\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sales Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: salesData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.id\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this);\n  };\n  _s(SalesData, \"ftAupnuDBoUE9IIYHXJgSZx6vZ8=\");\n}\n_c = Sales;\n;\nexport default Sales;\nvar _c;\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Sales","_s","$RefreshSig$","fetchSalesData","response","get","data","error","SalesData","salesData","setSalesData","loading","setLoading","setError","getSalesData","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","id","_c","$RefreshReg$"],"sources":["C:/Users/hetdo/PycharmProjects/djangoProject/Frontend/frontend/src/Components/Sales.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Sales() {\r\n\r\n// Create a reusable function to get sales data\r\nconst fetchSalesData = async () => {\r\n  try {\r\n    const response = await axios.get('http://127.0.0.1:8000/project/sales/');\r\n    return response.data; // Return the response data\r\n  } catch (error) {\r\n    throw error; // Propagate error to handle it in the component\r\n  }\r\n};\r\n\r\nconst SalesData = () => {\r\n  const [salesData, setSalesData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch data when component mounts\r\n  useEffect(() => {\r\n    const getSalesData = async () => {\r\n      try {\r\n        const data = await fetchSalesData(); // Call the sales function\r\n        setSalesData(data); // Set the state with the fetched data\r\n        setLoading(false); // Stop the loading state\r\n      } catch (err) {\r\n        setError(err.message); // Capture any error\r\n        setLoading(false); // Stop the loading state\r\n      }\r\n    };\r\n\r\n    getSalesData(); // Trigger data fetch\r\n  }, []); // Empty dependency array means this runs once after the component mounts\r\n\r\n  // Render loading state or error if applicable\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Sales Data</h1>\r\n      <ul>\r\n        {salesData.map((item, index) => (\r\n          <li key={index}>{item.id}</li> \r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n};\r\n\r\nexport default Sales;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAEjB;EACA,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,sCAAsC,CAAC;MACxE,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IAAAP,EAAA;IACtB,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;IAC9C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;IAC5C,MAAM,CAACW,KAAK,EAAEM,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;IAExC;IACAD,SAAS,CAAC,MAAM;MACd,MAAMmB,YAAY,GAAG,MAAAA,CAAA,KAAY;QAC/B,IAAI;UACF,MAAMR,IAAI,GAAG,MAAMH,cAAc,CAAC,CAAC,CAAC,CAAC;UACrCO,YAAY,CAACJ,IAAI,CAAC,CAAC,CAAC;UACpBM,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,OAAOG,GAAG,EAAE;UACZF,QAAQ,CAACE,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC;UACvBJ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QACrB;MACF,CAAC;MAEDE,YAAY,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAER;IACA,IAAIH,OAAO,EAAE,oBAAOZ,OAAA;MAAAkB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;IACrC,IAAId,KAAK,EAAE,oBAAOR,OAAA;MAAAkB,QAAA,GAAG,SAAO,EAACV,KAAK;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;IAEvC,oBACEtB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBtB,OAAA;QAAAkB,QAAA,EACGR,SAAS,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBzB,OAAA;UAAAkB,QAAA,EAAiBM,IAAI,CAACE;QAAE,GAAfD,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAC9B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEV,CAAC;EAACpB,EAAA,CAnCIO,SAAS;AAqCf;AAACkB,EAAA,GAjDQ1B,KAAK;AAiDb;AAED,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}